# This template is intended to make it fast to migrate 1UP Team's Backend NodeJS projects into GitHub Actions successfully
# Please consider you might need to tweak a few commands to make your project migration into GitHub Actions successfully

# Make sure SERVICE_NAME is generated correctly in the step: Setup service name
# Add the following secrets from the repository settings: UP_AWS_ACCESS_KEY_ID, UP_AWS_SECRET_ACCESS_KEY, UP_SLACK_WEBHOOK_URL

# npm commands could be modified to npm if required (e.g. to yarn)

name: 1UP - Build Backend NodeJS project

on:
  push:
    branches:
      - "*"
      - '**/*'

env:
  IMAGE_TAG: b${{ github.run_number }}-${{ github.sha }}
  ECR_REPOSITORY: 933782373565.dkr.ecr.eu-west-1.amazonaws.com
  NODE_VERSION: 14.X


jobs:
  build_gradle_project:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.JS
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Setup service name
        run: |
          SERVICE_NAME=${GITHUB_REPOSITORY##*/1up-}
          echo "Service name: $SERVICE_NAME"
          echo "SERVICE_NAME=$SERVICE_NAME" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.UP_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.UP_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Build - NodeJS - Install, Build and Test
        run: |
          npm install
          npm build
          npm test

      - name: Build - Docker
        run: |
          DOCKER_IMAGE="${{ env.ECR_REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ env.IMAGE_TAG }}"
          docker build -t $DOCKER_IMAGE .
          echo "DOCKER_IMAGE=$DOCKER_IMAGE" >> $GITHUB_ENV

      - name: Release - configure AWS ECR credentials [on master]
        if: github.ref == 'refs/heads/master'
        uses: aws-actions/amazon-ecr-login@v1

      - name: Release - push Docker image [on master]
        if: github.ref == 'refs/heads/master'
        run: docker push ${{ env.DOCKER_IMAGE }}

      - name: Release - [on master]
        uses: silinternational/ecs-deploy@master
        if: github.ref == 'refs/heads/master'
        with:
          aws_access_key_cmd: '--aws-access-key'
          aws_access_key: ${{ secrets.UP_AWS_ACCESS_KEY_ID }}
          aws_secret_key_cmd: '--aws-secret-key'
          aws_secret_key: ${{ secrets.UP_AWS_SECRET_ACCESS_KEY }}
          cluster_cmd: '--cluster'
          cluster: 'up-cluster-production'
          image_cmd: '--image'
          image: ${{ env.DOCKER_IMAGE }}
          region_cmd: '--region'
          region: 'eu-west-1'
          service_name_cmd: '--service-name'
          service_name: ${{ env.SERVICE_NAME }}
          timeout_cmd: '--timeout'
          timeout: '600'

      - name: Report - setup [on master]
        if: always() && github.ref == 'refs/heads/master'
        run: |
          GIT_COMMIT_MSG=$(git log -1 --pretty=format:'%s')
          GIT_COMMIT_MSG_NO_SUFFIX="${GIT_COMMIT_MSG#*\(#}"
          GIT_PR="${GIT_COMMIT_MSG_NO_SUFFIX%\)*}"
          GIT_REPO_URL="https://github.com/${{ github.repository }}"
          GIT_PR_URL="$GIT_REPO_URL/pull/$GIT_PR"
          GIT_REPO_NAME="${{ github.repository }}"
          echo "GIT_ACTIONS_URL=<$GIT_REPO_URL/actions/runs/${{ github.run_id }}|${GIT_REPO_NAME#*/}>" >> $GITHUB_ENV
          [[ "$GIT_PR" =~ ^[0-9]+$ ]] && GIT_PR_MSG="<$GIT_PR_URL|$GIT_COMMIT_MSG>" || GIT_PR_MSG="$GIT_COMMIT_MSG"
          echo "GIT_PR_MSG=$GIT_PR_MSG" >> $GITHUB_ENV

      - name: Report - success [on master]
        uses: Ilshidur/action-slack@2.0.2
        if: success() && github.ref == 'refs/heads/master'
        env:
          SLACK_WEBHOOK: ${{ secrets.UP_SLACK_WEBHOOK_URL }}
          SLACK_CUSTOM_PAYLOAD: '{"channel": "1up-releases", "attachments":[{"color": "#2eb886", "blocks":[{"type":"section","text":{"type":"mrkdwn","text": "{{ GIT_ACTIONS_URL }} released\n{{ GIT_PR_MSG }}"}}]}]}'
      - name: Report - failure [on master]
        uses: Ilshidur/action-slack@2.0.2
        if: failure() && github.ref == 'refs/heads/master'
        env:
          SLACK_WEBHOOK: ${{ secrets.UP_SLACK_WEBHOOK_URL }}
          SLACK_CUSTOM_PAYLOAD: '{"channel": "1up-releases",  "attachments":[{"color": "#ed2f00", "blocks":[{"type":"section","text":{"type":"mrkdwn","text": ":boom: {{ GIT_ACTIONS_URL }} failed!\n{{ GIT_PR_MSG }}"}}]}]}'
